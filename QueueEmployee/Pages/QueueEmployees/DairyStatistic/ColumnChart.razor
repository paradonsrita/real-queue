@using QMS.Models;
@using Radzen.Blazor;

<h3>ColumnChart</h3>
<RadzenChart>
    @if (CounterQueues != null && CounterQueues.Any())
    {
        <RadzenColumnSeries Data="@TransformedCounterQueues" CategoryProperty="type_name" Title="Counter queue" LineType="LineType.Dashed" ValueProperty="Total">
            <RadzenSeriesDataLabels Visible="@ShowDataLabels" />
        </RadzenColumnSeries>
    }
    @if (BookingQueues != null && BookingQueues.Any())
    {
        <RadzenColumnSeries Data="@TransformedBookingQueues" CategoryProperty="type_name" Title="Booking queue" LineType="LineType.Dashed" ValueProperty="Total">
            <RadzenSeriesDataLabels Visible="@ShowDataLabels" />
        </RadzenColumnSeries>
    }

    <RadzenColumnOptions Radius="5" />
    <RadzenValueAxis Min="0">
        <RadzenGridLines Visible="true" />
        <RadzenAxisTitle Text="Amount of queue" />
    </RadzenValueAxis>
</RadzenChart>

@code {
    [Parameter]
    public IEnumerable<Statistic> CounterQueues { get; set; }

    [Parameter]
    public IEnumerable<Statistic> BookingQueues { get; set; }

    [Parameter]
    public bool ShowDataLabels { get; set; }

    private IEnumerable<Statistic> TransformedCounterQueues => CounterQueues?.Select(c => new Statistic
        {
            type_name = TransformTypeName(c.type_name),
            Total = c.Total
        });

    private IEnumerable<Statistic> TransformedBookingQueues => BookingQueues?.Select(b => new Statistic
        {
            type_name = TransformTypeName(b.type_name),
            Total = b.Total
        });

    private string TransformTypeName(string typeName)
    {
        return typeName switch
        {
            "Finance" => "เปิด-ปิดบัญชีฝากถอน",
            "Loan" => "ขอกู้ รับชำระ จ่ายเงินกู้",
            "Shares" => "สมัครสมาชิก ลาออก ซื้อ-ถอนหุ้น",
            "Other" => "อื่นๆ",
            _ => typeName
        };
    }
}
