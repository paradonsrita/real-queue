@inject HttpClient Http
@using System.Net.Http.Json
@using QMS.Services.LocalStorage;
@inject SessionStorageService SessionStorageService
@using QMS.Services
@inject IHttpClientFactory HttpClientFactory



@if (queues == null)
{
    <p><em>Loading...</em></p>
}
else if (!string.IsNullOrEmpty(error))
{
    <p><em>@error</em></p>
}
else
{
    <h2 class="text-center">คิวปัจจุบัน</h2>
    <table class="table table-dark">
        <thead>
            <tr>
                <th>Type</th>
                <th>Number</th>
                <th>Counter</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var queue in queues.Where(q => q.counter == selectedCounter && q.QueueStatus == "in process").OrderBy(q => q.QueueNumber))
            {
                <tr>
                    <td>@TransformQueueType(queue.QueueType)</td>
                    <td>@queue.QueueNumber</td>
                    <td>@queue.counter</td>
                </tr>
            }
        </tbody>
    </table>

    <h2 class="text-center">คิวที่รอ</h2>
    <table class="table table-dark">
        <thead>
            <tr>
                <th>Type</th>
                <th>Number</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var queue in queues.Where(q => q.QueueType == selectedTransaction && q.QueueStatus == "waiting").OrderBy(q => q.QueueNumber))
            {
                <tr>
                    <td>@TransformQueueType(queue.QueueType)</td>
                    <td>@queue.QueueNumber</td>
                </tr>
            }
        </tbody>
    </table>
}


