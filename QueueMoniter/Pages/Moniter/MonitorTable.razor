﻿@using System.Collections.Generic
@using QMS.Models

<table class="table mb-5">
    <thead>
        <tr>
            <th style="width: 25%;">Queue Number</th>
            <th style="width: 50%;">Queue Type</th>
            <th style="width: 25%;">Counter</th>
        </tr>
    </thead>
    <tbody>
        @if (Queue != null && Queue.Any())
        {
            // กรองคิวที่มี Source ตรงกับที่กำหนด
            var filteredQueue = Queue
                .Where(q => q.Source == Source)
                .OrderByDescending(q => q.CallQueueTime)
                .Take(3)
                .ToList();
            var queueCount = filteredQueue.Count;

            @foreach (var stat in filteredQueue)
            {
                <tr>
                    <td style="font-size: 150%;"><b>@(string.IsNullOrEmpty(stat.QueueNumber) ? "-" : stat.QueueNumber)</b></td>
                    <td>@(queueTypeMappings.ContainsKey(stat.QueueType) ? queueTypeMappings[stat.QueueType] : stat.QueueType)</td>
                    <td style="font-size: 150%;"><b>@(stat.Counter.HasValue ? stat.Counter.ToString() : "-")</b></td>
                </tr>
            }
            @if (queueCount < 3)
            {
                var emptyRows = 3 - queueCount;

                @for (int i = 0; i < emptyRows; i++)
                {
                    <tr class="empty-row">
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                }
            }
        }

    </tbody>
</table>

@code {
    [Parameter]
    public string Source { get; set; }

    [Parameter]
    public List<QueueModel> Queue { get; set; }


    private Dictionary<string, string> queueTypeMappings = new Dictionary<string, string>
    {
        { "Finance", "เปิด-ปิดบัญชีฝากถอน" },
        { "Loan", "ขอกู้ จ่ายเงินกู้" },
        { "Shares", "สมัครสมาชิก ลาออก ซื้อ-ถอนหุ้น รับชำระหนี้" },
        { "Other", "อื่นๆ"}
    };
}