@page "/"
@using QMS.Services
@using QMS.Models

@inject QueueService QueueService
@inject NavigationManager NavigationManager

<div class="text-center border p-2 custom-border text-color" style="margin: auto; max-width: 90%; width: 550px;">
    <h1>เลือกประเภทคิว</h1>
</div>

<div class="button-group">
    <button class="button-rounded shadow p-4 mb-5" @onclick='() => BookQueue("F")'>เปิด-ปิดบัญชีฝากถอน</button>
    <button class="button-rounded shadow p-4 mb-5" @onclick='() => BookQueue("L")'>ขอกู้ จ่ายเงินกู้</button>
    <button class="button-rounded shadow p-4 mb-5" @onclick='() => BookQueue("S")'>สมัครสมาชิก ลาออก ซื้อ-ถอนหุ้น รับชำระหนี้</button>
    <button class="button-rounded shadow p-4 mb-5" @onclick='() => BookQueue("H")'>อื่น ๆ</button>
</div>



@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger mt-3">
        @ErrorMessage
    </div>
}

@code {
    private string ErrorMessage;

    private async Task BookQueue(string queueType)
    {
        var result = await QueueService.AddQueueAsync(queueType);

        if (result != null)
        {
            var queueId = result.queue_id; // หรือถ้า result เป็นแบบอื่น ให้แก้ไขให้ถูกต้องตามชนิด
            if (queueId > 0)
            {
                NavigationManager.NavigateTo($"/queue-ticket/{queueId}", true);
            }
            else
            {
                ErrorMessage = "ไม่สามารถจองคิวได้ กรุณาลองใหม่อีกครั้ง";
            }
        }
        else
        {
            ErrorMessage = "ไม่สามารถจองคิวได้ กรุณาลองใหม่อีกครั้ง";
        }
    }
}